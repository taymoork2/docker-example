version: '2'
services:
    consul:
        network_mode: "host"
        image: gliderlabs/consul-server:latest
        command: -bootstrap -advertise 192.168.99.100
        ports:
            - 8300:8300
            - 8400:8400
            - 8500:8500
            - 8600:53/udp
        environment:
            - SERVICE_IGNORE=always
    nginx:
        build: dockerusername/nginx:latest
        depends_on:
            - consul
        ports:
            - "80:80"
            - "443:443"
        environment:
            - SERVICE_IGNORE=always
    redis-app1:
        image: redis:latest
        volumes:
            - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
        command: redis-server /usr/local/etc/redis/redis.conf
        ports:
            - "6379:6379"
        networks:
            - backend-app1
        environment:
            - SERVICE_IGNORE=always
    postgres-app1:
        image: postgres:latest
        ports:
            - "5432:5432"
        networks:
            - backend-app1
        environment:
            - SERVICE_IGNORE=always
	redis-app2:
        image: redis:latest
        volumes:
            - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
        command: redis-server /usr/local/etc/redis/redis.conf
        ports:
            - "6379:6379"
        networks:
            - backend-app2
        environment:
            - SERVICE_IGNORE=always
    postgres-app2:
        image: postgres:latest
        ports:
            - "5432:5432"
        networks:
            - backend-app2
        environment:
            - SERVICE_IGNORE=always
    app1:
        image: dockerusername/app1:latest
        depends_on:
            - redis-app1
            - postgres-app1
        links:
            - redis-app1:redis
            - postgres-app1:postgres
        environment:
            SERVICE_NAME: app1
            PORT: "3030"
            POSTGRESQL_URL: postgres://postgres:5432/app1
            REDIS_URL: redis://:foobared@redis:6379/
        networks:
            - backend-app1
        ports:
            - "3030:3030"
        restart: always
	app2:
        image: dockerusername/app2:latest
        depends_on:
            - redis-app2
            - postgres-app2
        links:
            - redis-app2:redis
            - postgres-app2:postgres
        environment:
            SERVICE_NAME: app2
            PORT: "3030"
            POSTGRESQL_URL: postgres://postgres:5432/app2
            REDIS_URL: redis://:foobared@redis:6379/
        networks:
            - backend-app2
        ports:
            - "3030:3030"
        restart: always
    registrator:
        network_mode: "host"
        image: gliderlabs/registrator:latest
        command: -internal -resync 15 consul://0.0.0.0:8500 -retry-attempts 10 -retry-interval 1000
        restart: always
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock
        environment:
          - SERVICE_IGNORE=always
networks:
    backend-app1:
        driver: bridge
	backend-app2:
        driver: bridge